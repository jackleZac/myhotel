{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Documents\\\\myhotel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\"; // Assuming you have an AuthContext set up\nimport HomePage from \"./pages/HomePage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport UserPage from \"./pages/UserPage\";\nimport UpdateUserPage from \"./pages/UpdateUserProfile\";\nimport Login from \"./components/Login\"; // Import your Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    authToken\n  } = useContext(AuthContext); // Access the authentication token from context\n\n  // A helper function to render protected routes\n  const ProtectedRoute = _ref => {\n    let {\n      element,\n      path,\n      requiredRole\n    } = _ref;\n    if (!authToken) {\n      // If no token (i.e., user is not authenticated), redirect to login\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If user is authenticated, we check for roles (admin/user)\n    if (requiredRole && requiredRole !== 'any' && requiredRole !== authToken.role) {\n      // If the user's role does not match the required role, show an access denied message or redirect\n      alert('Access Denied. Insufficient permissions.');\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If authenticated and role matches, show the requested page\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      element: element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 50\n          }, this),\n          requiredRole: \"admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/user\",\n          element: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 49\n          }, this),\n          requiredRole: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/user/update\",\n          element: /*#__PURE__*/_jsxDEV(UpdateUserPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 56\n          }, this),\n          requiredRole: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zt17QF7wOhmmJ1DQC9DhK96gPzM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useContext","AuthContext","HomePage","AdminPage","UserPage","UpdateUserPage","Login","jsxDEV","_jsxDEV","App","_s","authToken","ProtectedRoute","_ref","element","path","requiredRole","fileName","_jsxFileName","lineNumber","columnNumber","role","alert","children","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Documents/myhotel/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\"; // Assuming you have an AuthContext set up\nimport HomePage from \"./pages/HomePage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport UserPage from \"./pages/UserPage\";\nimport UpdateUserPage from \"./pages/UpdateUserProfile\";\nimport Login from \"./components/Login\"; // Import your Login component\n\nexport default function App() {\n  const { authToken } = useContext(AuthContext); // Access the authentication token from context\n\n  // A helper function to render protected routes\n  const ProtectedRoute = ({ element, path, requiredRole }) => {\n    if (!authToken) {\n      // If no token (i.e., user is not authenticated), redirect to login\n      return <Route path={path} element={<Login />} />;\n    }\n\n    // If user is authenticated, we check for roles (admin/user)\n    if (requiredRole && requiredRole !== 'any' && requiredRole !== authToken.role) {\n      // If the user's role does not match the required role, show an access denied message or redirect\n      alert('Access Denied. Insufficient permissions.');\n      return <Route path={path} element={<HomePage />} />;\n    }\n\n    // If authenticated and role matches, show the requested page\n    return <Route path={path} element={element} />;\n  };\n\n  return (\n    <div>\n      <Router>\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={<HomePage />} />\n\n          {/* Protected Routes */}\n          <ProtectedRoute path=\"/admin\" element={<AdminPage />} requiredRole=\"admin\" />\n          <ProtectedRoute path=\"/user\" element={<UserPage />} requiredRole=\"user\" />\n          <ProtectedRoute path=\"/user/update\" element={<UpdateUserPage />} requiredRole=\"user\" />\n\n          {/* Fallback route for unknown paths */}\n          <Route path=\"*\" element={<HomePage />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,uBAAuB,CAAC,CAAC;AACrD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMW,cAAc,GAAGC,IAAA,IAAqC;IAAA,IAApC;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAa,CAAC,GAAAH,IAAA;IACrD,IAAI,CAACF,SAAS,EAAE;MACd;MACA,oBAAOH,OAAA,CAACV,KAAK;QAACiB,IAAI,EAAEA,IAAK;QAACD,OAAO,eAAEN,OAAA,CAACF,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAClD;;IAEA;IACA,IAAIJ,YAAY,IAAIA,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAKL,SAAS,CAACU,IAAI,EAAE;MAC7E;MACAC,KAAK,CAAC,0CAA0C,CAAC;MACjD,oBAAOd,OAAA,CAACV,KAAK;QAACiB,IAAI,EAAEA,IAAK;QAACD,OAAO,eAAEN,OAAA,CAACN,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrD;;IAEA;IACA,oBAAOZ,OAAA,CAACV,KAAK;MAACiB,IAAI,EAAEA,IAAK;MAACD,OAAO,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD,CAAC;EAED,oBACEZ,OAAA;IAAAe,QAAA,eACEf,OAAA,CAACX,MAAM;MAAA0B,QAAA,eACLf,OAAA,CAACT,MAAM;QAAAwB,QAAA,gBAELf,OAAA,CAACV,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACD,OAAO,eAAEN,OAAA,CAACN,QAAQ;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGzCZ,OAAA,CAACI,cAAc;UAACG,IAAI,EAAC,QAAQ;UAACD,OAAO,eAAEN,OAAA,CAACL,SAAS;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACJ,YAAY,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7EZ,OAAA,CAACI,cAAc;UAACG,IAAI,EAAC,OAAO;UAACD,OAAO,eAAEN,OAAA,CAACJ,QAAQ;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACJ,YAAY,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1EZ,OAAA,CAACI,cAAc;UAACG,IAAI,EAAC,cAAc;UAACD,OAAO,eAAEN,OAAA,CAACH,cAAc;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACJ,YAAY,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGvFZ,OAAA,CAACV,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACD,OAAO,eAAEN,OAAA,CAACN,QAAQ;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACV,EAAA,CAvCuBD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}