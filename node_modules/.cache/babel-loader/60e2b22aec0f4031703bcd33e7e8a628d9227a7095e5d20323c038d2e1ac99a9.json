{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Documents\\\\myhotel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\"; // Assuming you have an AuthContext set up\nimport HomePage from \"./pages/HomePage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport UserPage from \"./pages/UserPage\";\nimport UpdateUserPage from \"./pages/UpdateUserProfile\";\nimport Login from \"./components/Login\"; // Import your Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    authToken,\n    userRole\n  } = useContext(AuthContext); // Access the authentication token and user role from context\n\n  // A helper function to handle protected routes\n  const ProtectedRoute = _ref => {\n    let {\n      element,\n      requiredRole\n    } = _ref;\n    if (!authToken) {\n      // If no token (i.e., user is not authenticated), redirect to login\n      return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If the user is authenticated but does not have the required role, show an alert or redirect\n    if (requiredRole && requiredRole !== 'any' && requiredRole !== userRole) {\n      alert('Access Denied. Insufficient permissions.');\n      return /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n\n    // If authenticated and role matches, render the element\n    return element;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 47\n            }, this),\n            requiredRole: \"admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 47\n            }, this),\n            requiredRole: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/update\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: /*#__PURE__*/_jsxDEV(UpdateUserPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 47\n            }, this),\n            requiredRole: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yNc1Z1GdUhYQS7I6oyIEp3edwqY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useContext","AuthContext","HomePage","AdminPage","UserPage","UpdateUserPage","Login","jsxDEV","_jsxDEV","App","_s","authToken","userRole","ProtectedRoute","_ref","element","requiredRole","fileName","_jsxFileName","lineNumber","columnNumber","alert","children","path","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Documents/myhotel/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\"; // Assuming you have an AuthContext set up\nimport HomePage from \"./pages/HomePage\";\nimport AdminPage from \"./pages/AdminPage\";\nimport UserPage from \"./pages/UserPage\";\nimport UpdateUserPage from \"./pages/UpdateUserProfile\";\nimport Login from \"./components/Login\"; // Import your Login component\n\nexport default function App() {\n  const { authToken, userRole } = useContext(AuthContext); // Access the authentication token and user role from context\n\n  // A helper function to handle protected routes\n  const ProtectedRoute = ({ element, requiredRole }) => {\n    if (!authToken) {\n      // If no token (i.e., user is not authenticated), redirect to login\n      return <Login />;\n    }\n\n    // If the user is authenticated but does not have the required role, show an alert or redirect\n    if (requiredRole && requiredRole !== 'any' && requiredRole !== userRole) {\n      alert('Access Denied. Insufficient permissions.');\n      return <HomePage />;\n    }\n\n    // If authenticated and role matches, render the element\n    return element;\n  };\n\n  return (\n    <div>\n      <Router>\n        <Routes>\n          {/* Public Routes */}\n          <Route path=\"/\" element={<HomePage />} />\n\n          {/* Protected Routes */}\n          <Route\n            path=\"/admin\"\n            element={<ProtectedRoute element={<AdminPage />} requiredRole=\"admin\" />}\n          />\n          <Route\n            path=\"/user\"\n            element={<ProtectedRoute element={<UserPage />} requiredRole=\"user\" />}\n          />\n          <Route\n            path=\"/user/update\"\n            element={<ProtectedRoute element={<UpdateUserPage />} requiredRole=\"user\" />}\n          />\n\n          {/* Fallback route for unknown paths */}\n          <Route path=\"*\" element={<HomePage />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,uBAAuB,CAAC,CAAC;AACrD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGZ,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAMY,cAAc,GAAGC,IAAA,IAA+B;IAAA,IAA9B;MAAEC,OAAO;MAAEC;IAAa,CAAC,GAAAF,IAAA;IAC/C,IAAI,CAACH,SAAS,EAAE;MACd;MACA,oBAAOH,OAAA,CAACF,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAClB;;IAEA;IACA,IAAIJ,YAAY,IAAIA,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAKJ,QAAQ,EAAE;MACvES,KAAK,CAAC,0CAA0C,CAAC;MACjD,oBAAOb,OAAA,CAACN,QAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrB;;IAEA;IACA,OAAOL,OAAO;EAChB,CAAC;EAED,oBACEP,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACX,MAAM;MAAAyB,QAAA,eACLd,OAAA,CAACT,MAAM;QAAAuB,QAAA,gBAELd,OAAA,CAACV,KAAK;UAACyB,IAAI,EAAC,GAAG;UAACR,OAAO,eAAEP,OAAA,CAACN,QAAQ;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGzCZ,OAAA,CAACV,KAAK;UACJyB,IAAI,EAAC,QAAQ;UACbR,OAAO,eAAEP,OAAA,CAACK,cAAc;YAACE,OAAO,eAAEP,OAAA,CAACL,SAAS;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACJ,YAAY,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC,eACFZ,OAAA,CAACV,KAAK;UACJyB,IAAI,EAAC,OAAO;UACZR,OAAO,eAAEP,OAAA,CAACK,cAAc;YAACE,OAAO,eAAEP,OAAA,CAACJ,QAAQ;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACJ,YAAY,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACFZ,OAAA,CAACV,KAAK;UACJyB,IAAI,EAAC,cAAc;UACnBR,OAAO,eAAEP,OAAA,CAACK,cAAc;YAACE,OAAO,eAAEP,OAAA,CAACH,cAAc;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACJ,YAAY,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC,eAGFZ,OAAA,CAACV,KAAK;UAACyB,IAAI,EAAC,GAAG;UAACR,OAAO,eAAEP,OAAA,CAACN,QAAQ;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACV,EAAA,CA/CuBD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}