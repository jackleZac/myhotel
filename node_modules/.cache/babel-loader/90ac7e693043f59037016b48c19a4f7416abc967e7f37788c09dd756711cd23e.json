{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Documents\\\\myhotel\\\\src\\\\components\\\\RoomBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RoomBooking(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [rooms, setRooms] = useState([]); // Dynamic list of rooms\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [check_in_date, setCheckInDate] = useState(\"\");\n  const [check_out_date, setCheckOutDate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // Error state for fetching or booking issues\n\n  const token = localStorage.getItem('authToken'); // Retrieve the token from localStorage\n\n  // Fetch rooms from the API\n  useEffect(() => {\n    const fetchRooms = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/rooms/\");\n        setRooms(response.data); // Ensure this is an array of room objects\n      } catch (err) {\n        console.error(\"Error fetching rooms:\", err);\n        setError(\"Failed to fetch available rooms. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRooms();\n  }, []);\n\n  // Handle room selection\n  const handleRoomSelection = e => {\n    const roomId = parseInt(e.target.value, 10); // Parse value as an integer\n    const room = rooms.find(room => room.room_id === roomId); // Match room by room_id\n    setSelectedRoom(room || null); // Set selectedRoom to the matched room or null\n  };\n\n  // Handle booking submission\n  const handleBook = async () => {\n    // Input validation\n    if (!selectedRoom || !check_in_date || !check_out_date) {\n      setError(\"Please select a room and both check-in and check-out dates.\");\n      return;\n    }\n    if (new Date(check_in_date) >= new Date(check_out_date)) {\n      setError(\"Check-out date must be after check-in date.\");\n      return;\n    }\n    setError(null); // Clear any previous errors\n    setLoading(true);\n    try {\n      const bookingData = {\n        user_id: user.user_id,\n        // Use user.user_id instead of username\n        room_id: selectedRoom.room_id,\n        // Use room_id from the selected room\n        check_in_date,\n        check_out_date\n      };\n      console.log(\"Booking Data: \", bookingData);\n      const response = await axios.post(\"http://localhost:5000/api/bookings\", bookingData, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}` // Add the token to the Authorization header\n        }\n      });\n      alert(`Room booked successfully! Booking ID: ${response.data.bookingId}`);\n      // Reset form\n      setSelectedRoom(null);\n      setCheckInDate(\"\");\n      setCheckOutDate(\"\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error booking room:\", error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to book room. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading rooms...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), \" \", !loading && rooms.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleRoomSelection,\n        value: (selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.room_id) || \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a room type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: room.room_id,\n          children: [room.type, \" - $\", room.price, \" per night\"]\n        }, room.room_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: check_in_date,\n        onChange: e => setCheckInDate(e.target.value),\n        placeholder: \"Check-in date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: check_out_date,\n        onChange: e => setCheckOutDate(e.target.value),\n        placeholder: \"Check-out date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBook,\n        disabled: loading,\n        children: loading ? \"Booking...\" : \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !loading && rooms.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rooms available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomBooking, \"b3fRnCLxTVWUZzef47Fll3dCjaw=\");\n_c = RoomBooking;\nexport default RoomBooking;\nvar _c;\n$RefreshReg$(_c, \"RoomBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomBooking","_ref","_s","user","rooms","setRooms","selectedRoom","setSelectedRoom","check_in_date","setCheckInDate","check_out_date","setCheckOutDate","loading","setLoading","error","setError","token","localStorage","getItem","fetchRooms","response","get","data","err","console","handleRoomSelection","e","roomId","parseInt","target","value","room","find","room_id","handleBook","Date","bookingData","user_id","log","post","headers","Authorization","alert","bookingId","_error$response","_error$response$data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","onChange","map","type","price","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Documents/myhotel/src/components/RoomBooking.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction RoomBooking({ user }) {\r\n  const [rooms, setRooms] = useState([]); // Dynamic list of rooms\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const [check_in_date, setCheckInDate] = useState(\"\");\r\n  const [check_out_date, setCheckOutDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null); // Error state for fetching or booking issues\r\n\r\n  const token = localStorage.getItem('authToken'); // Retrieve the token from localStorage\r\n\r\n  // Fetch rooms from the API\r\n  useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/rooms/\");\r\n        setRooms(response.data); // Ensure this is an array of room objects\r\n      } catch (err) {\r\n        console.error(\"Error fetching rooms:\", err);\r\n        setError(\"Failed to fetch available rooms. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  // Handle room selection\r\n  const handleRoomSelection = (e) => {\r\n    const roomId = parseInt(e.target.value, 10); // Parse value as an integer\r\n    const room = rooms.find((room) => room.room_id === roomId); // Match room by room_id\r\n    setSelectedRoom(room || null); // Set selectedRoom to the matched room or null\r\n  };\r\n\r\n  // Handle booking submission\r\n  const handleBook = async () => {\r\n    // Input validation\r\n    if (!selectedRoom || !check_in_date || !check_out_date) {\r\n      setError(\"Please select a room and both check-in and check-out dates.\");\r\n      return;\r\n    }\r\n\r\n    if (new Date(check_in_date) >= new Date(check_out_date)) {\r\n      setError(\"Check-out date must be after check-in date.\");\r\n      return;\r\n    }\r\n\r\n    setError(null); // Clear any previous errors\r\n    setLoading(true);\r\n\r\n    try {   \r\n      const bookingData = {\r\n        user_id: user.user_id, // Use user.user_id instead of username\r\n        room_id: selectedRoom.room_id, // Use room_id from the selected room\r\n        check_in_date,\r\n        check_out_date,\r\n      };\r\n\r\n      console.log(\"Booking Data: \", bookingData);\r\n      const response = await axios.post(\"http://localhost:5000/api/bookings\", bookingData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`, // Add the token to the Authorization header\r\n        },\r\n      });\r\n\r\n      alert(`Room booked successfully! Booking ID: ${response.data.bookingId}`);\r\n      // Reset form\r\n      setSelectedRoom(null);\r\n      setCheckInDate(\"\");\r\n      setCheckOutDate(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error booking room:\", error);\r\n      setError(\r\n        error.response?.data?.message ||\r\n          \"Failed to book room. Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Book a Room</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>} {/* Display errors */}\r\n      {loading && <p>Loading rooms...</p>} {/* Loading state */}\r\n      {!loading && rooms.length > 0 && (\r\n        <>\r\n          <select onChange={handleRoomSelection} value={selectedRoom?.room_id || \"\"}>\r\n            <option value=\"\">Select a room type</option>\r\n            {rooms.map((room) => (\r\n              <option key={room.room_id} value={room.room_id}>\r\n                {room.type} - ${room.price} per night\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br />\r\n          <input\r\n            type=\"date\"\r\n            value={check_in_date}\r\n            onChange={(e) => setCheckInDate(e.target.value)}\r\n            placeholder=\"Check-in date\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={check_out_date}\r\n            onChange={(e) => setCheckOutDate(e.target.value)}\r\n            placeholder=\"Check-out date\"\r\n          />\r\n          <br />\r\n          <button onClick={handleBook} disabled={loading}>\r\n            {loading ? \"Booking...\" : \"Book Now\"}\r\n          </button>\r\n        </>\r\n      )}\r\n      {!loading && rooms.length === 0 && (\r\n        <p>No rooms available at the moment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomBooking;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}