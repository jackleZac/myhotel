{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Documents\\\\myhotel\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create the provider component\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [authToken, setAuthToken] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n\n  // Load token from localStorage if it exists\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      setAuthToken(token);\n    }\n    ;\n    const role = localStorage.getItem(\"userRole\");\n    if (role) {\n      setUserRole(role);\n    }\n    ;\n  }, []);\n\n  // Store token in localStorage when it changes\n  useEffect(() => {\n    if (authToken) {\n      localStorage.setItem(\"authToken\", authToken);\n    } else {\n      localStorage.removeItem(\"authToken\");\n    }\n    ;\n    if (userRole) {\n      localStorage.setItem(\"userRole\", userRole);\n    } else {\n      localStorage.removeItem(\"userRole\");\n    }\n  }, [authToken, userRole]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      setAuthToken,\n      userRole,\n      setUserRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6XfyHYjoY51kHyOKEtgbvrbeMwo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","authToken","setAuthToken","userRole","setUserRole","token","localStorage","getItem","role","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Documents/myhotel/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create the context\r\nexport const AuthContext = createContext();\r\n\r\n// Create the provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  // Load token from localStorage if it exists\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      setAuthToken(token);\r\n    };\r\n\r\n    const role = localStorage.getItem(\"userRole\");\r\n    if (role) {\r\n      setUserRole(role);\r\n    };\r\n  }, []);\r\n\r\n  // Store token in localStorage when it changes\r\n  useEffect(() => {\r\n    if (authToken) {\r\n      localStorage.setItem(\"authToken\", authToken);\r\n    } else {\r\n      localStorage.removeItem(\"authToken\");\r\n    };\r\n\r\n    if (userRole) {\r\n      localStorage.setItem(\"userRole\", userRole);\r\n    } else {\r\n      localStorage.removeItem(\"userRole\");\r\n    }\r\n  }, [authToken, userRole]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authToken, setAuthToken, userRole, setUserRole }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACTH,YAAY,CAACG,KAAK,CAAC;IACrB;IAAC;IAED,MAAMG,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC7C,IAAIC,IAAI,EAAE;MACRJ,WAAW,CAACI,IAAI,CAAC;IACnB;IAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,EAAE;MACbK,YAAY,CAACG,OAAO,CAAC,WAAW,EAAER,SAAS,CAAC;IAC9C,CAAC,MAAM;MACLK,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;IACtC;IAAC;IAED,IAAIP,QAAQ,EAAE;MACZG,YAAY,CAACG,OAAO,CAAC,UAAU,EAAEN,QAAQ,CAAC;IAC5C,CAAC,MAAM;MACLG,YAAY,CAACI,UAAU,CAAC,UAAU,CAAC;IACrC;EACF,CAAC,EAAE,CAACT,SAAS,EAAEE,QAAQ,CAAC,CAAC;EAEzB,oBACER,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEX,SAAS;MAAEC,YAAY;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAAJ,QAAA,EAC7EA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CArCWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}